/*
    win.bit -- Windows Settings
 */

Bit.load({
    dir: {
        lib: '${dir.cfg}/bin',
    },

    ext: {
        exe:   'exe',
        lib:   'a',
        obj:   'obj',
        shlib: 'lib',
        shobj: 'dll',
    },

    prefixes: {
        product: 'C:/Program Files/${settings.title}',
        productver: 'C:/Program Files/${settings.title}',

        config:  '${prefixes.product}',
        bin:     '${prefixes.product}/bin',
        include: '${prefixes.product}/inc',
        lib:     '${prefixes.product}/bin',
        log:     '${prefixes.product}/logs',
        spool:   '${prefixes.product}/tmp',
        src:     '${prefixes.product}/src',
        web:     '${prefixes.product}/web',
    },

    '+required': [ 'winsdk', 'compiler', 'link', 'dumpbin' ],
    '+optional': [ 'inno' ],

    defaults: {
        '+compiler': [ '-nologo', '-GR-', '-W3' ],
        '+defines':  [ '-D_REENTRANT', '-D_MT' ],
        '+libraries':[ 'ws2_32.lib', 'advapi32.lib', 'user32.lib', 'kernel32.lib', 'oldnames.lib', 'msvcrt.lib' ],
        '+linker':   [
            '-nologo',
            '-libpath:${dir.lib}',
            '-nodefaultlib',
            '-incremental:no',
        ],
        scripts: {
            '+preblend': '
                //  Runs to update defaults.* before blending defaults into targets
                let defaults = bit.defaults
                let settings = bit.settings
                if (settings.preprocess) defaults.compiler += [ "-E" ]
                if (settings.profile == "debug") {
                    defaults.compiler += [ "-Zi", "-Od", "-MDd" ]
                    defaults.linker += [ "-debug" ]
                } else {
                    defaults.compiler += [ "-Zi", "-Od", "-MDd" ]
                }
                defaults.linker += [(("${ARCH}" == "x86_64") ? "-machine:x64" : "-machine:x86")]
            ',
        },
    },

    rules: {
        //  MOB -Fd{DIR} should this be named uniquely per target?
        'c->obj': '"${packs.compiler.path}" -c -Fo${OUT} -Fd${dir.obj} ${CFLAGS} ${target.defines} ${INCLUDES} ${PREPROCESS} ${IN}',
        'lib':  '"${packs.link.path}" -dll -out:${OUT} -entry:_DllMainCRTStartup@12 -def:${DEF} ${target.linker} ${IN} ${LIBS}',
        'exe':  '"${packs.link.path}" -out:${OUT} -entry:mainCRTStartup -subsystem:console ${target.linker} ${IN} ${LIBS}',
        'gui':  '"${packs.link.path}" -out:${OUT} -entry:WinMainCRTStartup -subsystem:Windows ${target.linker} ${IN} ${LIBS} shell32.lib',

        'sym':   '"${packs.dumpbin.path}" /symbols ${IN}',
    },
})
