/*
    macosx.bit -- MAC OS X Settings
 */

Bit.load({
    blend: [    
        'posix.bit',
    ],

    extensions: {
        'shlib': 'dylib',
        'shobj': 'dylib',
    },

    defaults: {
        '+compiler': [ '-fPIC', '-Wall' ],
        '+defines':  [ '-DPIC' ],
        '+libraries':[ 'pthread', 'm' ],
        '+linker':   [
            '-L${directories.lib}',
            "-Wl,-rpath,@executable_path/../lib",   //  MOB - only for libs?
            "-Wl,-rpath,@executable_path/",         //  MOB - only for libs?
            "-Wl,-rpath,@loader_path/",             //  MOB - only for libs?
        ],
        scripts: {
            '+preblend': '
                let defaults = bit.defaults
                if (${settings.preprocess}) defaults.compiler += [ "-E" ]
                defaults.compiler += [("${settings.configuration}" == "debug" ? "-g" : "-Os")]
                defaults.linker += [("${settings.configuration}" == "debug" ? "-g" : "")]
                if (${settings.warnUnused}) defaults.compiler += [ "-Wno-unused-result" ]
                if (${settings.hasDynLoad}) defaults.linker += [ "-ldl" ]
                let tune = ${settings.hasMtune} ? "mtune" : "mcpu"
                if ("${ARCH}".startsWith("arm"))  defaults.compiler += [ tune + "=arm" + MODEL, "-mno-sched-prolog" ]
            ',
        },
    },

    rules: {
        'c->o': '${components.compiler.path} -c -o ${OUT} -arch ${ARCH} ${CFLAGS} ${target.defines} ${INCLUDES} ${PREPROCESS} ${IN}',
        'lib':  '${components.compiler.path} -dynamiclib -o ${OUT} -arch ${ARCH} ${target.linker} -install_name @rpath/${OUT} ${LIBS} ${IN}'
        'exe':  '${components.compiler.path} -o ${OUT} -arch ${ARCH} ${target.linker} -L${directories.lib} ${LIBS} ${IN}'
        'gui':  '${components.compiler.path} -o ${OUT} -arch ${ARCH} ${target.linker} -L${directories.lib} ${LIBS} ${IN}'
    },
})
