/*
    gcc.bit -- GCC Build Settings
 */

Bit.load({
    defaults: {
        '+compiler': [ '-fPIC', '-Wall', '-Wno-unused-result' ],
        '+defines':  [ '-DPIC' ],
        '+libraries':[ 'm' ],
        '+linker':   [ 
                '-L${dirs.lib}', 
                '-Wl,--enable-new-dtags', 
                '-Wl,-rpath,$ORIGIN/', 
                '-Wl,-rpath,$ORIGIN/../lib' 
        ],
        scripts: {
            '+preblend': '
                if (${settings.preprocess})     defaults.compiler += [ "-E" ]
                if (${settings.debug})          defaults.linker += [ "-g" ]
                if (${settings.hasDynamicLoad}) defaults.libraries += [ "dl" ]
                let families = [/^amd/, /^arm/, /^i.86|^x86/, /^m68/, /^power|^ppc/, /^sparc/, /^strongarm/, /^x86_64/, /^xscale/, /^sh/, /^univsal/ ]
                let tune = ${settings.hasMtune} ? "mtune" : "mcpu"
                if (${ARCH}.startsWith("arm"))  defaults.compiler += [ tune + "=arm" + MODEL, "-mno-sched-prolog" ]
            ',
        },
    },
    rules: {
        'c->o': '${packs.compiler.path} -c -o ${OUT} -arch ${ARCH} ${DEFINES} ${target.defines} ${target.include} ${PREPROCESS} -o ${OUT} ${IN}',
            //  MOB --- missing library switch
        'so':   '${packs.compiler.path} -o ${OUT} -arch ${ARCH} ${DEFINES} ${target.linker} -L${dirs.lib} ${LIBS} ${IN}'
        'exe':  '${packs.compiler.path} -o ${OUT} -arch ${ARCH} ${DEFINES} ${target.linker} -L${dirs.lib} ${LIBS} ${IN}'
    },
})
