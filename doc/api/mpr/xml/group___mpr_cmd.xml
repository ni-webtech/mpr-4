<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.8">
  <compounddef id="group___mpr_cmd" kind="group">
    <compoundname>MprCmd</compoundname>
    <title>MprCmd</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___mpr_cmd_1gc48a59b1bfc4f3944a88e152863c3d32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mprCloseCmdFd</definition>
        <argsstring>(MprCmd *cmd, int channel)</argsstring>
        <name>mprCloseCmdFd</name>
        <param>
          <type>MprCmd *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Close the command channel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>MprCmd object created via mprCreateCmd </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number to close. Should be either MPR_CMD_STDIN, MPR_CMD_STDOUT or MPR_CMD_STDERR. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6260"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_cmd_1gbc453ad9cdcd6046373ebfce72ce1fd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MprCmd *</type>
        <definition>MprCmd* mprCreateCmd</definition>
        <argsstring>(MprCtx ctx)</argsstring>
        <name>mprCreateCmd</name>
        <param>
          <type><ref refid="group___mpr_mem_1g1413d66bb5356730c6fa08ca0af6bc0f" kindref="member">MprCtx</ref></type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Create a new Command object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Any memory allocation context created by MprAlloc </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A newly allocated MprCmd object. Use mprFree to close and free. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6268"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_cmd_1g66cccaaaa550e9d2cf381ff8854c2d7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mprDisableCmdEvents</definition>
        <argsstring>(MprCmd *cmd, int channel)</argsstring>
        <name>mprDisableCmdEvents</name>
        <param>
          <type>MprCmd *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Disable command I/O events. </para>        </briefdescription>
        <detaileddescription>
<para>This disables events on a given channel. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>MprCmd object created via mprCreateCmd </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number to close. Should be either MPR_CMD_STDIN, MPR_CMD_STDOUT or MPR_CMD_STDERR. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6284"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_cmd_1g7562126cafba57260cd73634f1ee4aed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mprDisconnectCmd</definition>
        <argsstring>(MprCmd *cmd)</argsstring>
        <name>mprDisconnectCmd</name>
        <param>
          <type>MprCmd *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Disconnect a command its underlying I/O channels. </para>        </briefdescription>
        <detaileddescription>
<para>This is used to prevent further I/O wait events while still preserving the MprCmd object. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>MprCmd object created via mprCreateCmd </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6276"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_cmd_1g2fd38e2aaf8e7c2a1aed39aa1005155e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mprEnableCmdEvents</definition>
        <argsstring>(MprCmd *cmd, int channel)</argsstring>
        <name>mprEnableCmdEvents</name>
        <param>
          <type>MprCmd *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Enable command I/O events. </para>        </briefdescription>
        <detaileddescription>
<para>This enables events on a given channel. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>MprCmd object created via mprCreateCmd </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number to close. Should be either MPR_CMD_STDIN, MPR_CMD_STDOUT or MPR_CMD_STDERR. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6292"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_cmd_1g68cf4226027c07ba3f3e5b30ecd48590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MprBuf *</type>
        <definition>MprBuf* mprGetCmdBuf</definition>
        <argsstring>(MprCmd *cmd, int channel)</argsstring>
        <name>mprGetCmdBuf</name>
        <param>
          <type>MprCmd *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Get the underlying buffer for a channel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>MprCmd object created via mprCreateCmd </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number to close. Should be either MPR_CMD_STDIN, MPR_CMD_STDOUT or MPR_CMD_STDERR. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the MprBuf buffer structure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6319"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_cmd_1g4dcefa4a65ff85b78c9b6580abac0a62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mprGetCmdExitStatus</definition>
        <argsstring>(MprCmd *cmd, int *status)</argsstring>
        <name>mprGetCmdExitStatus</name>
        <param>
          <type>MprCmd *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Get the command exit status. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>MprCmd object created via mprCreateCmd </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to an integer to receive the command exit status. This is typically zero for success, but this is platform specific. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6301"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_cmd_1gb286ce3b057579a16b84ec56997ae63f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mprGetCmdFd</definition>
        <argsstring>(MprCmd *cmd, int channel)</argsstring>
        <name>mprGetCmdFd</name>
        <param>
          <type>MprCmd *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Get the underlying file descriptor for an I/O channel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>MprCmd object created via mprCreateCmd </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number to close. Should be either MPR_CMD_STDIN, MPR_CMD_STDOUT or MPR_CMD_STDERR. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The file descriptor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6310"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_cmd_1g5ac545e5959e115b2cd633004f5d949b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mprIsCmdRunning</definition>
        <argsstring>(MprCmd *cmd)</argsstring>
        <name>mprIsCmdRunning</name>
        <param>
          <type>MprCmd *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Test if the command is still running. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>MprCmd object created via mprCreateCmd </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the command is still running </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6327"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_cmd_1g79b9d648fb26331b46aab5d8d6b0bce4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mprMakeCmdIO</definition>
        <argsstring>(MprCmd *cmd)</argsstring>
        <name>mprMakeCmdIO</name>
        <param>
          <type>MprCmd *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Make the I/O channels to send and receive data to and from the command. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>MprCmd object created via mprCreateCmd </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if successful. Otherwise a negative MPR error code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6335"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_cmd_1g9aee91a4b53a03ea5dcf603b3c2437b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mprPollCmdPipes</definition>
        <argsstring>(MprCmd *cmd, int timeout)</argsstring>
        <name>mprPollCmdPipes</name>
        <param>
          <type>MprCmd *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Poll for I/O on the command pipes. </para>        </briefdescription>
        <detaileddescription>
<para>This is only used on windows which can&apos;t adequately detect EOF on a named pipe. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>MprCmd object created via mprCreateCmd </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Time in milliseconds to wait for the command to complete and exit. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6455"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_cmd_1g4a9036d982e301eb389e36b3b6a2bee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mprReadCmdPipe</definition>
        <argsstring>(MprCmd *cmd, int channel, char *buf, int bufsize)</argsstring>
        <name>mprReadCmdPipe</name>
        <param>
          <type>MprCmd *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bufsize</declname>
        </param>
        <briefdescription>
<para>Make the I/O channels to send and receive data to and from the command. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>MprCmd object created via mprCreateCmd </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number to read from. Should be either MPR_CMD_STDIN, MPR_CMD_STDOUT or MPR_CMD_STDERR. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to read into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if successful. Otherwise a negative MPR error code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6346"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_cmd_1g5644e84254f86b9f85374e90d081f0fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mprReapCmd</definition>
        <argsstring>(MprCmd *cmd, int timeout)</argsstring>
        <name>mprReapCmd</name>
        <param>
          <type>MprCmd *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Reap the command. </para>        </briefdescription>
        <detaileddescription>
<para>This waits for and collect the command exit status. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>MprCmd object created via mprCreateCmd </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Time in milliseconds to wait for the command to complete and exit. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if successful. Otherwise a negative MPR error code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6355"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_cmd_1g7f80cf889cf937a284d78552298667b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mprRunCmd</definition>
        <argsstring>(MprCmd *cmd, cchar *command, char **out, char **err, int flags)</argsstring>
        <name>mprRunCmd</name>
        <param>
          <type>MprCmd *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>cchar *</type>
          <declname>command</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>out</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>err</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Run a command using a string command line. </para>        </briefdescription>
        <detaileddescription>
<para>This starts the command via <ref refid="group___mpr_cmd_1g63558463aa20f047dbd03cae5b6dab7b" kindref="member">mprStartCmd()</ref> and waits for its completion. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>MprCmd object created via mprCreateCmd </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>command</parametername>
</parameternamelist>
<parameterdescription>
<para>Command line to run </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a string to receive the stdout from the command. Caller must free. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a string to receive the stderr from the command. Caller must free. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags to modify execution. Valid flags are: MPR_CMD_NEW_SESSION Create a new session on Unix MPR_CMD_SHOW Show the commands window on Windows MPR_CMD_IN Connect to stdin </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if successful. Otherwise a negative MPR error code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6370"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_cmd_1gfcea6f14d60761368a0644eb0c0de2aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mprRunCmdV</definition>
        <argsstring>(MprCmd *cmd, int argc, char **argv, char **out, char **err, int flags)</argsstring>
        <name>mprRunCmdV</name>
        <param>
          <type>MprCmd *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>out</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>err</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Run a command using an argv[] array of arguments. </para>        </briefdescription>
        <detaileddescription>
<para>This invokes <ref refid="group___mpr_cmd_1g63558463aa20f047dbd03cae5b6dab7b" kindref="member">mprStartCmd()</ref> and waits for its completion. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>MprCmd object created via mprCreateCmd </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>Count of arguments in argv </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>Command arguments array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a string to receive the stdout from the command. Caller must free. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a string to receive the stderr from the command. Caller must free. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags to modify execution. Valid flags are: MPR_CMD_NEW_SESSION Create a new session on Unix MPR_CMD_SHOW Show the commands window on Windows MPR_CMD_IN Connect to stdin </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if successful. Otherwise a negative MPR error code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6386"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_cmd_1g8288e08dc7387c14e0536d214eba6049" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mprSetCmdCallback</definition>
        <argsstring>(MprCmd *cmd, MprCmdProc callback, void *data)</argsstring>
        <name>mprSetCmdCallback</name>
        <param>
          <type>MprCmd *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>MprCmdProc</type>
          <declname>callback</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Define a callback to be invoked to receive response data from the command. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>MprCmd object created via mprCreateCmd </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>Function of the signature MprCmdProc which will be invoked for receive notification for data from the commands stdout and stderr channels. MprCmdProc has the signature: int callback(MprCmd *cmd, int channel, void *data) {} </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>User defined data to be passed to the callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6397"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_cmd_1ga0e753a2136410b79e480713aaf97b89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mprSetCmdDir</definition>
        <argsstring>(MprCmd *cmd, cchar *dir)</argsstring>
        <name>mprSetCmdDir</name>
        <param>
          <type>MprCmd *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>cchar *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>Set the home directory for the command. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>MprCmd object created via mprCreateCmd </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>String directory path name. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6405"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_cmd_1g731bf3b3b53862f42249d5a771107363" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mprSetCmdEnv</definition>
        <argsstring>(MprCmd *cmd, cchar **env)</argsstring>
        <name>mprSetCmdEnv</name>
        <param>
          <type>MprCmd *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>cchar **</type>
          <declname>env</declname>
        </param>
        <briefdescription>
<para>Set the command environment. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>MprCmd object created via mprCreateCmd </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>env</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of environment strings. Each environment string should be of the form: &quot;KEY=VALUE&quot;. The array must be null terminated. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6414"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_cmd_1g63558463aa20f047dbd03cae5b6dab7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mprStartCmd</definition>
        <argsstring>(MprCmd *cmd, int argc, char **argv, char **envp, int flags)</argsstring>
        <name>mprStartCmd</name>
        <param>
          <type>MprCmd *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>envp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Start the command. </para>        </briefdescription>
        <detaileddescription>
<para>This starts the command but does not wait for its completion. Once started, mprWriteCmdPipe can be used to write to the command and response data can be received via mprReadCmdPipe. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>MprCmd object created via mprCreateCmd </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>Count of arguments in argv </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>Command arguments array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>envp</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of environment strings. Each environment string should be of the form: &quot;KEY=VALUE&quot;. The array must be null terminated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags to modify execution. Valid flags are: MPR_CMD_NEW_SESSION Create a new session on Unix MPR_CMD_SHOW Show the commands window on Windows MPR_CMD_IN Connect to stdin </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if successful. Otherwise a negative MPR error code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6431"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_cmd_1g73dbe983174ac25e4af6a1fea4d8f966" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mprStopCmd</definition>
        <argsstring>(MprCmd *cmd)</argsstring>
        <name>mprStopCmd</name>
        <param>
          <type>MprCmd *</type>
          <declname>cmd</declname>
        </param>
        <briefdescription>
<para>Stop the command. </para>        </briefdescription>
        <detaileddescription>
<para>The command is immediately killed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>MprCmd object created via mprCreateCmd </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6438"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_cmd_1g86f4815eb5e4cdd4695ecfd17f8eb360" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mprWaitForCmd</definition>
        <argsstring>(MprCmd *cmd, int timeout)</argsstring>
        <name>mprWaitForCmd</name>
        <param>
          <type>MprCmd *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Wait for the command to complete. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>MprCmd object created via mprCreateCmd </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>Time in milliseconds to wait for the command to complete and exit. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero if successful. Otherwise a negative MPR error code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6447"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_cmd_1gc69adc9b03e41150d6d79512c0895c12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mprWriteCmdPipe</definition>
        <argsstring>(MprCmd *cmd, int channel, char *buf, int bufsize)</argsstring>
        <name>mprWriteCmdPipe</name>
        <param>
          <type>MprCmd *</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>channel</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bufsize</declname>
        </param>
        <briefdescription>
<para>Write data to an I/O channel. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>MprCmd object created via mprCreateCmd </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>Channel number to read from. Should be either MPR_CMD_STDIN, MPR_CMD_STDOUT or MPR_CMD_STDERR. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to read into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="6465"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Command execution Service. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title><bold>Description</bold>:</title><para>The MprCmd service enables execution of local commands. It uses three full-duplex pipes to communicate read, write and error data with the command. </para></simplesect>
<simplesect kind="par"><title><bold>API</bold> Stability:</title><para>Evolving. </para></simplesect>
<simplesect kind="see"><para><ref refid="group___mpr_cmd_1g68cf4226027c07ba3f3e5b30ecd48590" kindref="member">mprGetCmdBuf</ref> <ref refid="group___mpr_cmd_1gbc453ad9cdcd6046373ebfce72ce1fd6" kindref="member">mprCreateCmd</ref> <ref refid="group___mpr_cmd_1g5ac545e5959e115b2cd633004f5d949b" kindref="member">mprIsCmdRunning</ref> <ref refid="group___mpr_cmd_1g63558463aa20f047dbd03cae5b6dab7b" kindref="member">mprStartCmd</ref> <ref refid="group___mpr_cmd_1g4dcefa4a65ff85b78c9b6580abac0a62" kindref="member">mprGetCmdExitStatus</ref> <ref refid="group___mpr_cmd_1gb286ce3b057579a16b84ec56997ae63f" kindref="member">mprGetCmdFd</ref> <ref refid="group___mpr_cmd_1g79b9d648fb26331b46aab5d8d6b0bce4" kindref="member">mprMakeCmdIO</ref> <ref refid="group___mpr_cmd_1g4a9036d982e301eb389e36b3b6a2bee7" kindref="member">mprReadCmdPipe</ref> <ref refid="group___mpr_cmd_1g5644e84254f86b9f85374e90d081f0fc" kindref="member">mprReapCmd</ref> <ref refid="group___mpr_cmd_1g7f80cf889cf937a284d78552298667b3" kindref="member">mprRunCmd</ref> <ref refid="group___mpr_cmd_1gfcea6f14d60761368a0644eb0c0de2aa" kindref="member">mprRunCmdV</ref> <ref refid="group___mpr_cmd_1g86f4815eb5e4cdd4695ecfd17f8eb360" kindref="member">mprWaitForCmd</ref> <ref refid="group___mpr_cmd_1gc69adc9b03e41150d6d79512c0895c12" kindref="member">mprWriteCmdPipe</ref> <ref refid="group___mpr_cmd_1gc48a59b1bfc4f3944a88e152863c3d32" kindref="member">mprCloseCmdFd</ref> <ref refid="group___mpr_cmd_1g66cccaaaa550e9d2cf381ff8854c2d7a" kindref="member">mprDisableCmdEvents</ref> <ref refid="group___mpr_cmd_1g7562126cafba57260cd73634f1ee4aed" kindref="member">mprDisconnectCmd</ref> <ref refid="group___mpr_cmd_1g2fd38e2aaf8e7c2a1aed39aa1005155e" kindref="member">mprEnableCmdEvents</ref> <ref refid="group___mpr_cmd_1g9aee91a4b53a03ea5dcf603b3c2437b8" kindref="member">mprPollCmdPipes</ref> <ref refid="group___mpr_cmd_1g8288e08dc7387c14e0536d214eba6049" kindref="member">mprSetCmdCallback</ref> <ref refid="group___mpr_cmd_1ga0e753a2136410b79e480713aaf97b89" kindref="member">mprSetCmdDir</ref> <ref refid="group___mpr_cmd_1g731bf3b3b53862f42249d5a771107363" kindref="member">mprSetCmdEnv</ref> <ref refid="group___mpr_cmd_1g73dbe983174ac25e4af6a1fea4d8f966" kindref="member">mprStopCmd</ref> </para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
