<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.8">
  <compounddef id="group___mpr_module" kind="group">
    <compoundname>MprModule</compoundname>
    <title>MprModule</title>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___mpr_module_1g12f3bd6503c42b00ef185eb5a7b3073f" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* MprModuleEntry)(MprCtx ctx, void *data)</definition>
        <argsstring>)(MprCtx ctx, void *data)</argsstring>
        <name>MprModuleEntry</name>
        <briefdescription>
<para>Loadable module entry point signature. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title><bold>Description</bold>:</title><para>Loadable modules can have an entry point that is invoked automatically when a module is loaded. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Any memory context allocated by the MPR. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data passed to mprCreateModule </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a new MprModule structure for the module. Return NULL if the module can&apos;t be initialized. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="3710" bodyfile="/Users/mob/hg/mpr/all/mpr.h" bodystart="3710" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___mpr_module_1g63bd240ada3d4cb53ead7b4404fd5014" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MprModule *</type>
        <definition>MprModule* mprCreateModule</definition>
        <argsstring>(MprCtx ctx, cchar *name, void *data)</argsstring>
        <name>mprCreateModule</name>
        <param>
          <type><ref refid="group___mpr_mem_1g1413d66bb5356730c6fa08ca0af6bc0f" kindref="member">MprCtx</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>cchar *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a module. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title><bold>Description</bold>:</title><para>This call will create a module object for a loadable module. This should be invoked by the module itself in its module entry point to register itself with the MPR. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Any memory context allocated by the MPR. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the module </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>to associate with this module </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A module object for this module </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="3743"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_module_1g33859b7b158056a95d73f106f76fe7fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cchar *</type>
        <definition>cchar* mprGetModuleSearchPath</definition>
        <argsstring>(MprCtx ctx)</argsstring>
        <name>mprGetModuleSearchPath</name>
        <param>
          <type><ref refid="group___mpr_mem_1g1413d66bb5356730c6fa08ca0af6bc0f" kindref="member">MprCtx</ref></type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Get the module search path. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title><bold>Description</bold>:</title><para>Get the directory search path used by the MPR when loading dynamic modules. This is a colon separated (or semicolon on Windows) set of directories. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Any memory context allocated by the MPR. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The module search path. Caller must not free. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="3720"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_module_1g62c9cd99f99d97a0ee2cecfe6bc4cd06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MprModule *</type>
        <definition>MprModule* mprLoadModule</definition>
        <argsstring>(MprCtx ctx, cchar *name, cchar *entryPoint, void *data)</argsstring>
        <name>mprLoadModule</name>
        <param>
          <type><ref refid="group___mpr_mem_1g1413d66bb5356730c6fa08ca0af6bc0f" kindref="member">MprCtx</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>cchar *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>cchar *</type>
          <declname>entryPoint</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Load a module. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title><bold>Description</bold>:</title><para>Load a module into the MPR. This will load a dynamic shared object (shared library) and call the modules entry point. If the module has already been loaded, it this call will do nothing and will just return the already defined module object. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Any memory context allocated by the MPR. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the module to load. The module will be searched using the defined module search path (see <ref refid="group___mpr_module_1g166fe35db17d76f46a260c4ecf72c438" kindref="member">mprSetModuleSearchPath</ref>). The filename may or may not include a platform specific shared library extension such as .dll, .so or .dylib. By omitting the library extension, code can portably load shared libraries. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>entryPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of function to invoke after loading the module. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Arbitrary data pointer. This will be defined in MprModule.data and passed into the module initialization entry point. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A module object for this module created in the module entry point by calling <ref refid="group___mpr_module_1g63bd240ada3d4cb53ead7b4404fd5014" kindref="member">mprCreateModule</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="3760"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_module_1g3ffc2650baf7a3b10490450ea5defb48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MprModule *</type>
        <definition>MprModule* mprLookupModule</definition>
        <argsstring>(MprCtx ctx, cchar *name)</argsstring>
        <name>mprLookupModule</name>
        <param>
          <type><ref refid="group___mpr_mem_1g1413d66bb5356730c6fa08ca0af6bc0f" kindref="member">MprCtx</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>cchar *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Lookup a module. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title><bold>Description</bold>:</title><para>Lookup a module by name and return the module object. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Any memory context allocated by the MPR. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the module specified to <ref refid="group___mpr_module_1g63bd240ada3d4cb53ead7b4404fd5014" kindref="member">mprCreateModule</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A module object for this module created in the module entry point by calling <ref refid="group___mpr_module_1g63bd240ada3d4cb53ead7b4404fd5014" kindref="member">mprCreateModule</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="3779"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_module_1g166fe35db17d76f46a260c4ecf72c438" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mprSetModuleSearchPath</definition>
        <argsstring>(MprCtx ctx, char *searchPath)</argsstring>
        <name>mprSetModuleSearchPath</name>
        <param>
          <type><ref refid="group___mpr_mem_1g1413d66bb5356730c6fa08ca0af6bc0f" kindref="member">MprCtx</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>searchPath</declname>
        </param>
        <briefdescription>
<para>Set the module search path. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title><bold>Description</bold>:</title><para>Set the directory search path used by the MPR when loading dynamic modules. This path string must should be a colon separated (or semicolon on Windows) set of directories. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Any memory context allocated by the MPR. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>searchPath</parametername>
</parameternamelist>
<parameterdescription>
<para>Colon separated set of directories </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The module search path. Caller must not free. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="3731"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_module_1g7850e66f8a93866bbf3c149a65f33172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mprUnloadModule</definition>
        <argsstring>(MprModule *mp)</argsstring>
        <name>mprUnloadModule</name>
        <param>
          <type>MprModule *</type>
          <declname>mp</declname>
        </param>
        <briefdescription>
<para>Unload a module. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title><bold>Description</bold>:</title><para>Unload a module from the MPR. This will unload a dynamic shared object (shared library). This routine is not fully supported by the MPR and is often fraught with issues. A module must usually be completely inactive with no allocated memory when it is unloaded. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mp</parametername>
</parameternamelist>
<parameterdescription>
<para>Module object returned via <ref refid="group___mpr_module_1g3ffc2650baf7a3b10490450ea5defb48" kindref="member">mprLookupModule</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="3789"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Loadable Module Service. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title><bold>Description</bold>:</title><para>The MPR provides services to load and unload shared libraries. </para></simplesect>
<simplesect kind="see"><para><ref refid="group___mpr_module" kindref="compound">MprModule</ref>, <ref refid="group___mpr_module_1g33859b7b158056a95d73f106f76fe7fb" kindref="member">mprGetModuleSearchPath</ref>, <ref refid="group___mpr_module_1g166fe35db17d76f46a260c4ecf72c438" kindref="member">mprSetModuleSearchPath</ref>, <ref refid="group___mpr_module_1g62c9cd99f99d97a0ee2cecfe6bc4cd06" kindref="member">mprLoadModule</ref>, <ref refid="group___mpr_module_1g7850e66f8a93866bbf3c149a65f33172" kindref="member">mprUnloadModule</ref>, <ref refid="group___mpr_module_1g63bd240ada3d4cb53ead7b4404fd5014" kindref="member">mprCreateModule</ref>, <ref refid="group___mpr_module_1g3ffc2650baf7a3b10490450ea5defb48" kindref="member">mprLookupModule</ref>, <ref refid="mpr_8h_11d9d70fd98eb69a8c870f2202bee22eb" kindref="member">MprModuleProc</ref> </para></simplesect>
<simplesect kind="par"><title><bold>API</bold> Stability:</title><para>Evolving. </para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
