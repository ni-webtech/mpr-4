<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.8">
  <compounddef id="group___mpr_wait_handler" kind="group">
    <compoundname>MprWaitHandler</compoundname>
    <title>MprWaitHandler</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___mpr_wait_handler_1gcc222183cbeb335191a334899b5635bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MprWaitHandler *</type>
        <definition>MprWaitHandler* mprCreateWaitHandler</definition>
        <argsstring>(MprCtx ctx, int fd, int mask, MprDispatcher *dispatcher, MprEventProc proc, void *data)</argsstring>
        <name>mprCreateWaitHandler</name>
        <param>
          <type><ref refid="group___mpr_mem_1g1413d66bb5356730c6fa08ca0af6bc0f" kindref="member">MprCtx</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>MprDispatcher *</type>
          <declname>dispatcher</declname>
        </param>
        <param>
          <type><ref refid="group___mpr_event_1g6777c813e9ab55b0e29dfa9d0d19f32b" kindref="member">MprEventProc</ref></type>
          <declname>proc</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a wait handler. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title><bold>Description</bold>:</title><para>Create a wait handler that will be invoked when I/O of interest occurs on the specified file handle The wait handler is registered with the MPR event I/O mechanism. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Any memory allocation context created by MprAlloc </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>File descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of events of interest. This is made by oring MPR_READABLE and MPR_WRITABLE </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dispatcher</parametername>
</parameternamelist>
<parameterdescription>
<para>Dispatcher object to use for scheduling the I/O event. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proc</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function to invoke when an I/O event of interest has occurred. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data item to pass to the callback </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new wait handler registered with the MPR event mechanism </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="5421"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_wait_handler_1gdb816527b96de477a69bb9e99098c9cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mprDisableWaitEvents</definition>
        <argsstring>(MprWaitHandler *wp)</argsstring>
        <name>mprDisableWaitEvents</name>
        <param>
          <type>MprWaitHandler *</type>
          <declname>wp</declname>
        </param>
        <briefdescription>
<para>Disable wait events. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title><bold>Description</bold>:</title><para>Disable wait events for a given file descriptor. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wp</parametername>
</parameternamelist>
<parameterdescription>
<para>Wait handler created via <ref refid="group___mpr_wait_handler_1gcc222183cbeb335191a334899b5635bd" kindref="member">mprCreateWaitHandler</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="5453"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_wait_handler_1g3a2dba730e20be0baf6166050ac947d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mprEnableWaitEvents</definition>
        <argsstring>(MprWaitHandler *wp, int desiredMask)</argsstring>
        <name>mprEnableWaitEvents</name>
        <param>
          <type>MprWaitHandler *</type>
          <declname>wp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>desiredMask</declname>
        </param>
        <briefdescription>
<para>Enable wait events. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title><bold>Description</bold>:</title><para>Enable wait events for a given file descriptor. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wp</parametername>
</parameternamelist>
<parameterdescription>
<para>Wait handler created via <ref refid="group___mpr_wait_handler_1gcc222183cbeb335191a334899b5635bd" kindref="member">mprCreateWaitHandler</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>desiredMask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of desirable events (MPR_READABLE | MPR_WRITABLE) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="5462"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_wait_handler_1g4aba5720db6c4d68637f34019eea4559" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>MprWaitHandler *</type>
        <definition>MprWaitHandler* mprInitWaitHandler</definition>
        <argsstring>(MprCtx ctx, MprWaitHandler *wp, int fd, int mask, MprDispatcher *dispatcher, MprEventProc proc, void *data)</argsstring>
        <name>mprInitWaitHandler</name>
        <param>
          <type><ref refid="group___mpr_mem_1g1413d66bb5356730c6fa08ca0af6bc0f" kindref="member">MprCtx</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>MprWaitHandler *</type>
          <declname>wp</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>MprDispatcher *</type>
          <declname>dispatcher</declname>
        </param>
        <param>
          <type><ref refid="group___mpr_event_1g6777c813e9ab55b0e29dfa9d0d19f32b" kindref="member">MprEventProc</ref></type>
          <declname>proc</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Statically initialize a wait handler. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title><bold>Description</bold>:</title><para>Initialize a wait handler that will be invoked when I/O of interest occurs on the specified file handle The wait handler is registered with the MPR event I/O mechanism. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Any memory allocation context created by MprAlloc </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wp</parametername>
</parameternamelist>
<parameterdescription>
<para>Wait handler structure to initialize </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>File descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of events of interest. This is made by oring MPR_READABLE and MPR_WRITABLE </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dispatcher</parametername>
</parameternamelist>
<parameterdescription>
<para>Dispatcher object to use for scheduling the I/O event. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>proc</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function to invoke when an I/O event of interest has occurred. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data item to pass to the callback </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new wait handler registered with the MPR event mechanism </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="5438"/>
      </memberdef>
      <memberdef kind="function" id="group___mpr_wait_handler_1gd95b0d5c47ddbc6f5219a4a2c0678ab9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mprRecallWaitHandler</definition>
        <argsstring>(MprCtx ctx, int fd)</argsstring>
        <name>mprRecallWaitHandler</name>
        <param>
          <type><ref refid="group___mpr_mem_1g1413d66bb5356730c6fa08ca0af6bc0f" kindref="member">MprCtx</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <briefdescription>
<para>Recall a wait handler. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title><bold>Description</bold>:</title><para>Signal that a wait handler should be recalled at the earliest opportunity. This is useful when a protocol stack has buffered data that must be processed regardless of whether more I/O occurs. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Any memory allocation context created by MprAlloc </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fd</parametername>
</parameternamelist>
<parameterdescription>
<para>File descriptor to recall </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/hg/mpr/all/mpr.h" line="5472"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Wait Handler Service. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title><bold>Description</bold>:</title><para>Wait handlers provide callbacks for when I/O events occur. They provide a wait to service many I/O file descriptors without requiring a thread per descriptor. </para></simplesect>
<simplesect kind="see"><para><ref refid="group___mpr_wait_handler_1gdb816527b96de477a69bb9e99098c9cf" kindref="member">mprDisableWaitEvents</ref>, <ref refid="group___mpr_wait_handler_1g3a2dba730e20be0baf6166050ac947d4" kindref="member">mprEnableWaitEvents</ref>, <ref refid="group___mpr_wait_handler_1gd95b0d5c47ddbc6f5219a4a2c0678ab9" kindref="member">mprRecallWaitHandler</ref>, <ref refid="group___mpr_wait_handler" kindref="compound">MprWaitHandler</ref>, <ref refid="group___mpr_event_1gf292a0f7982192dba8e5f7535d24377d" kindref="member">mprCreateEvent</ref>, mprServiceDispatcher, <ref refid="group___mpr_event" kindref="compound">MprEvent</ref> </para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
