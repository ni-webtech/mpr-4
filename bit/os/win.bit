/*
    win.bit -- Windows Settings
 */

bit({
    OS: 'WIN',
    LIKE: 'WIN',

    extensions: {
        exe:   'exe',
        lib:   'a',
        obj:   'obj',
        shlib: 'lib',
        shobj: 'dll',
    },

    prefixes: {
        product: 'C:/Program Files/${settings.title}',
        bin:     '${prefixes.product}/bin',
        config:  '${prefixes.product}',
        doc:     '${prefixes.product}/doc',
        header:  '${prefixes.product}/inc',
        lib:     '${prefixes.product}/bin',
        log:     '${prefixes.product}/logs',
        jem:     '${prefixes.product}/jems',
        samples: '${prefixes.product}/samples',
        src:     '${prefixes.product}/src',
        web:     '${prefixes.product}/web',
    },

    '+required': [ 'winsdk', 'compiler', 'link' ],
    '+optional': [ 'inno' ],

    common: {
        '+compiler': [ '-nologo', '-GR-', '-W3' ],
        '+defines':  [ '-D_REENTRANT', '-D_MT' ],
        '+libraries':[ 'ws2_32.lib', 'advapi32.lib', 'user32.lib', 'kernel32.lib', 'oldnames.lib', 'msvcrt.lib' ],
        '+linker':   [
            '-nologo',
            '-libpath:${directories.lib}',
            '-nodefaultlib',
            '-incremental:no',
        ],
        '+preblend': '
            //  Runs to update common.* before blending common into targets
            let common = spec.common
            let settings = spec.settings
            if (settings.preprocess) common.compiler += [ "-E" ]
            if (settings.configuration == "debug") {
                common.compiler += [ "-Zi", "-Od", "-MDd" ]
                common.linker += [ "-debug" ]
            } else {
                common.compiler += [ "-Zi", "-Od", "-MDd" ]
            }
            common.linker += [(("${ARCH}" == "x86_64") ? "-machine:x64" : "-machine:x86")]
        ',
    },

    rules: {
        //  MOB -Fd{DIR} should this be named uniquely per target?
        'c->obj': '"${components.compiler.path}" -c -Fo${OUT} -Fd${directories.obj} ${CFLAGS} ${target.defines} ${INCLUDES} ${PREPROCESS} ${IN}',
        'lib':  '"${components.link.path}" -dll -out:${OUT} -entry:_DllMainCRTStartup@12 -def:${DEF} ${target.linker} ${IN} ${LIBS}',
        'exe':  '"${components.link.path}" -out:${OUT} -entry:mainCRTStartup -subsystem:console ${target.linker} ${IN} ${LIBS}',
        'gui':  '"${components.link.path}" -out:${OUT} -entry:WinMainCRTStartup -subsystem:Windows ${target.linker} ${IN} ${LIBS} shell32.lib',

        'db':   '${components.dumpbin.path} /symbols ${IN}',
    },
})
