/*
    macosx.bit -- MAC OS X Settings
 */

bit({
    OS: 'MACOSX',
    LIKE: 'POSIX',

    blend: [    
        'posix.bit',
    ],

    extensions: {
        'shlib': 'dylib',
        'shobj': 'dylib',
    },

    common: {
        '+compiler': [ '-fPIC', '-Wall', '-Wno-unused-result' ],
        '+defines':  [ '-DPIC' ],
        '+libraries':[ 'pthread', 'm' ],
        '+linker':   [
            '-L${directories.lib}',
            "-Wl,-rpath,@executable_path/../lib",   //  MOB - only for libs?
            "-Wl,-rpath,@executable_path/",         //  MOB - only for libs?
            "-Wl,-rpath,@loader_path/",             //  MOB - only for libs?
        ],
        '+script': '
            let common = spec.common.compiler
            if (${settings.preprocess}) common.compiler += [ "-E" ]
            common.compiler += [("${settings.configuration}" == "debug" ? "-g" : "-Os")]
            common.linker += [("${settings.configuration}" == "debug" ? "-g" : "")]
            if (${settings.hasDynLoad}) common.linker += [ "-ldl" ]
            let tune = ${settings.hasMtune} ? "mtune" : "mcpu"
            if ("${ARCH}".startsWith("arm"))  common.compiler += [ tune + "=arm" + MODEL, "-mno-sched-prolog" ]
        ',
    },

    rules: {
        'c->o': '${components.compiler.path} -c -o ${OUT} -arch ${ARCH} ${DEBUG} ${CFLAGS} ${target.defines} ${INCLUDES} ${PREPROCESS} ${IN}',
        'LIB':  '${components.compiler.path} -dynamiclib -o ${OUT} -arch ${ARCH} ${DEBUG} ${target.linker} -install_name @rpath/${OUT} ${LIBS} ${IN}'
        'EXE':  '${components.compiler.path} -o ${OUT} -arch ${ARCH} ${DEBUG} ${target.linker} -L${directories.lib} ${LIBS} ${IN}'
    },
})
