/*
    winsdk.bit - WinSDK tools
 */

let search = []
for each (drive in (FileSystem.drives() - ['A', 'B'])) {
    search += Path(drive + ':/').glob('/Program Files*/Microsoft SDKs/Windows/*')
}
if (search.length == 0) {
    throw 'Can\'t find the Windows SDK' + 'Download from http://msdn.microsoft.com/en-us/windowsserver/bb980924.aspx'
}
let winsdk = probe('Include/WinBase.h', {fullpath: true, search: search.sort().reverse()})
bit({components: { winsdk: { path: winsdk }}})

let dir = winsdk.dirname.dirname
spec.env.PATH = [ dir.join('Bin'), ]
spec.env.INCLUDE = [ dir.join('INCLUDE') ]
if (spec.ARCH == 'x86_64') {
    spec.env.LIB = [ dir.join('lib/x64') ]
} else {
    spec.env.LIB = [ dir.join('lib') ]
}
