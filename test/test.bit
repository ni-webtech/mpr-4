/*
    test.bit
 */

Bit.load({
    targets: {
        test: {
            action: "
                let ropt = {show: true}
                run('testMpr -v -i 2 --depth ${settings.depth}', ropt)
                if (bit.settings.depth >= 3) {
                    trace('Test', 'Light load tests')
                    run('testMpr -v -i 20 --depth ${settings.depth}', ropt)
                    for each (t in [2, 4]) {
                        trace('Test', 'Light thread tests')
                        run('testMpr -v -i 20 --depth ${settings.depth} --threads ' + t, ropt)
                    }
                }
                if (bit.settings.depth >= 4) {
                    trace('Test', 'Longevity load tests')
                    run('testMpr -v -i 100 --depth ${settings.depth}', ropt)
                    for each (t in [8, 16]) {
                        trace('Test', 'Light thread tests')
                        run('testMpr -v -i 100 --depth ${settings.depth} --threads ' + t, ropt)
                    }
                }
                trace('Test', 'Unit tests complete')
            ",
            platforms: [ 'local' ],
        },
        benchMpr: {
            type: 'exe',
            depends: [ 'libmpr', ],
            sources: [ 'benchMpr.c' ],
            platforms: [ 'local' ],
        },
        runProgram: {
            type: 'exe',
            sources: [ 'runProgram.c' ],
        },
        testMpr: {
            type: 'exe',
            depends: [ 'libmpr', 'libmprssl', 'runProgram' ],
            sources: [ 'test*.c' ],
        },
        benchmark: {
            action: "
                Path('').write(Cmd('benchMpr -T 0'))
                Path('').write(Cmd('benchMpr -T 20'))
            ",
            platforms: [ 'local' ],
        }
    },
})
