#!/bin/bash
#
#   Build a project using the native IDE
#
#   Currently supports Visual Studio, MSBuild and XCode
#   This is an internal-script used when testing only
#

if [ -f out/inc/buildConfig.h ] ; then
    . `cacheConfig out/inc/buildConfig.h`
else
    . build/bin/buildConfig.sh
fi

VS="/Program Files/Microsoft Visual Studio 10/Common7/IDE/devenv.exe"
MB="c:/Windows/Microsoft.NET/Framework/v4.0.30319/msbuild.exe"

log() {
    tag=$1
    shift
    printf "%12s %s\n" $tag "$*"
}

vsBuild() {
    local status=0
    if [ -x "${VS}" ] ; then
        if [ ! -f src/include/buildConfig.save ] ; then
            mv src/include/buildConfig.h src/include/buildConfig.save
        fi
        cp src/include/master/buildConfig.h src/include

        log "[Test]" "Building ${BLD_PRODUCT}-static VS project"
        rm -fr projects/WIN/*/Win32
        "${VS}" projects/WIN/${BLD_PRODUCT}-static/*.sln /clean
        "${VS}" projects/WIN/${BLD_PRODUCT}-static/*.sln /build

        log "[Test]" "Building ${BLD_PRODUCT}-dynamic VS project"
        rm -fr projects/WIN/*/Win32
        "${VS}" projects/WIN/${BLD_PRODUCT}-dynamic/*.sln /clean

        if [ $? != 0 ] ; then
            echo Failed to clean: "${VS}" projects/WIN/${BLD_PRODUCT}-dynamic/*.sln /clean
            exit 255
        fi
        "${VS}" projects/WIN/${BLD_PRODUCT}-dynamic/*.sln /build
        if [ $? != 0 ] ; then
            echo Failed to build: "${VS}" projects/WIN/${BLD_PRODUCT}-dynamic/*.sln /build
            exit 255
        fi

        if [ -f src/include/buildConfig.save ] ; then
            mv src/include/buildConfig.save src/include/buildConfig.h
        fi
        rm -fr projects/WIN/*/Win32

        status=0
        for f in appweb cgiProgram ejs ejsc ejsmod ejssql http httpPassword makerom testAppweb
        do
            if [ ! -x "$BLD_BIN_DIR/${f}${BLD_EXE}" ] ; then
                echo Missing target $BLD_BIN_DIR/${f}${BLD_EXE} >&2
                status=255
            fi
        done
        echo STATUS $status
    fi
    exit $status
}


msBuild() {
    local status=0

    touch projects/WIN/${BLD_PRODUCT}-all/buildConfig.default
    log "[Test]" "Building ${BLD_PRODUCT}-all VS project"
    rm -fr projects/WIN/*/Win32
    "${VS}" projects/WIN/${BLD_PRODUCT}-all/*.sln /clean
    if [ $? != 0 ] ; then
        echo Failed to clean: "${VS}" projects/WIN/${BLD_PRODUCT}-all/*.sln /clean
        exit 255
    fi
    "${VS}" projects/WIN/${BLD_PRODUCT}-all/*.sln /build
    if [ $? != 0 ] ; then
        echo Failed to build: "${VS}" projects/WIN/${BLD_PRODUCT}-all/*.sln /build
        exit 255
    fi
    rm -fr projects/WIN/*/Win32
    status=0
    for f in appweb cgiProgram ejs ejsc ejsmod ejssql http httpPassword makerom testAppweb
    do
        if [ ! -x "$BLD_BIN_DIR/${f}${BLD_EXE}" ] ; then
            echo Missing target $BLD_BIN_DIR/${f}${BLD_EXE} >&2
            status=255
        fi
    done
    echo STATUS $status
    exit $status
}

winBuild() {
    local status=0
    if [ -f buildConfig.make ] ; then
        if [ ! -x "${VS}" ] ; then
            echo "Can't find $VS" >&2
            exit 255
        else
            vsBuild
        fi
    else
        if [ ! -x "${MB}" ] ; then
            echo "Can't find $MB" >&2
            exit 255
        else
            msBuild
        fi
    fi
}

macBuild() {
    if which xcodebuild >/dev/null 2>&1 ; then
        if [ "$BLD_TYPE" = "DEBUG" ] ; then
            config=Debug
        else
            config=Release
        fi
        xcodebuild -project projects/MACOSX/appweb-all/appweb-all.xcodeproj -configuration $config clean
        if [ $? != 0 ] ; then
            echo Failed to clean: xcodebuild -project projects/MACOSX/appweb-all/appweb-all.xcodeproj -configuration $config clean
        fi
        xcodebuild -project projects/MACOSX/appweb-all/appweb-all.xcodeproj -configuration $config
        if [ $? != 0 ] ; then
            echo Failed to build: xcodebuild -project projects/MACOSX/appweb-all/appweb-all.xcodeproj -configuration $config
        fi
    fi
}

case $BLD_OS in
WIN)
    winBuild
    ;;
MACOSX)
    macBuild
    ;;
*)
    ;;
esac
