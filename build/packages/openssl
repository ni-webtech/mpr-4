#
#	OpenSsl configuration
#

OPENSSL_DIRVER=0.9.8j
OPENSSL_VER=${OPENSSL_DIRVER%[a-z]}
USE_SYSTEM_LIB=0

if [ "$BLD_HOST_OS" = MACOSX ] ; then
    USE_SYSTEM_LIB=1
fi

if [ "$USE_SYSTEM_LIB" = 1 -a -x /usr/include/openssl ] ; then
    #
    #	Use the OpenSSL installed on the local system
    #
    BLD_OPENSSL_LIBS="ssl crypto"
else

    if [ "$BLD_OPENSSL_DIR" = "" ] ; then
        #
        #	Replace this line to set BLD_OPENSSL_DIR with the location of the package on your system
        #
        BLD_OPENSSL_DIR=$BLD_TOP/`probePackage "..:../..:../../.." packages/openssl/openssl-$OPENSSL_DIRVER`
        if [ $BLD_OPENSSL_DIR = $BLD_TOP/ ] ; then
            echo "Can't find the OPENSSL package version $OPENSSL_VER"
            exit 255
        fi
    fi

    BLD_OPENSSL_DIR=`canonPath "$BLD_OPENSSL_DIR"`
    if [ -x "$BLD_OPENSSL_DIR" ] ; then
        if [ $BLD_HOST_OS = WIN ] ; then
            BLD_OPENSSL_IMP_LIBPATH="$BLD_OPENSSL_DIR/out32dll"
            BLD_OPENSSL_IMP_LIBS="libeay32.dll ssleay32.dll"
            BLD_OPENSSL_LIBS="libeay32 ssleay32"
            dir=`relativePath "$BLD_OPENSSL_DIR"`
            BLD_OPENSSL_IFLAGS="-I$dir/inc32"
        else
            BLD_OPENSSL_IMP_LIBPATH="$BLD_OPENSSL_DIR"
            if [ $BLD_HOST_OS = MACOSX ] ; then
                BLD_OPENSSL_IMP_LIBS="libssl.${OPENSSL_VER}.dylib libcrypto.${OPENSSL_VER}.dylib"
            else
                BLD_OPENSSL_IMP_LIBS="libssl.so.${OPENSSL_VER} libcrypto.so.${OPENSSL_VER}"
            fi
            BLD_OPENSSL_LIBS="ssl crypto"
            BLD_OPENSSL_IFLAGS="-I$BLD_OPENSSL_DIR/include"
        fi
    else
        echo "Can't find OpenSSL package"
        exit 255
    fi
fi
