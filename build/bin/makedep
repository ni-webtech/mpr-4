#!/bin/bash
#
#   Create .makedep files for each directory
#
#   Set env vars BLD_OUT_DIR and BLD_TOP to define the output directory and the top of the source tree
#

makeDep() {
    local file top dir

    file="${1}"
    top="$2"

    dir=`dirname $file`
    dir="${dir#./}"
    if [ "$dir" != "." ] ; then
        dir=`echo $dir | sed 's/[^/][^/]*/../g'`
        top="$top/$dir"
    fi
    top=${top#./}

    cat >"${file}" <<!EOF
#
#   .makedep -- Initial Makefile dependencies. Generated by makedep.
#               This will be replaced when "make depend" is run.
#

all: headers compile

BLD_TOP     := ${BLD_TOP:-${top}}
BLD_INC_DIR := ${BLD_INC_DIR:-${top}/out/inc}

#
#   Read the build configuration, rules and per-os make definitions.
#
include \$(BLD_INC_DIR)/buildConfig.h
include \$(BLD_TOP)/build/make/make.rules

ifeq (\$(BUILDING_NATIVE),1)
    include \$(BLD_TOP)/build/make/make.\$(BLD_BUILD_OS)
else
    include \$(BLD_TOP)/build/make/make.\$(BLD_HOST_OS)
endif
!EOF
}


#
#   Find the top level directory
#
TOP=.
level=0
while [ $level -lt 30 ] 
do
    if [ -d $TOP/build -a -d $TOP/build/bin -a -d $TOP/build/src ] ; then
        break
    fi
    TOP=$TOP/..
    level=$((level + 1))
done
TOP=${TOP#./}

if [ $level -ge 30 ] ; then
    echo "Can't find top level directory with build directory"
    exit 255
fi


#
#   Create .makedep files from here and below
#
find . -name Makefile -print | egrep -v "/out/|/staging/|/pkgtmp/|.tmp/" | sed 's/Makefile/.makedep/' | while read file
do
    makeDep $file $TOP
done
