#!/bin/bash
#
#   makeVsSol -- Make Visual Studio (10) Solutions 
#
#   Copyright (c) Embedthis LLC, 2003-2011. All Rights Reserved.
#
#   It is expected that makeVsSol is only invoked from the Embedthis build systems. It
#   expects the Makefile and and make.rules to have defined all the necessary compile 
#   and link flag environment variables.
#

ARCHIVE=
DO=
IFLAGS=
MACHINE=MachineX86
VERBOSE=0
VERSION=1.0
VERBOSE=${VERBOSE:=0}

#
#   VS 10 compatible
#
PROJECT_FILE_VERSION=10.0.30319.1
TOOLS_VERSION=4.0

###############################################################################

log() {
    tag=$1
    shift
    if [ "$VERBOSE" = 0 -a "$TRACE" = "0" ] ; then
        printf "%12s %s\n" "[$tag]" "$*"
    fi
}

parseArgs() {
    local argc proj rest

    argc=$#
    _INDEX=1
    while [ $_INDEX -le $argc ] ; do

        getSwitch "$@"

        case "${_SWITCH}" in 
        --help)
            usage
            ;;
        --deps)
            proj=${_ARG%% *}
            rest=${_ARG#?* }
            eval DEPS_${proj//\./_}=\"$rest\"
            useArg
            ;;
        --name)
            NAME="${_ARG}"
            useArg
            ;;
        --solution)
            SOLUTION="${_ARG}"
            useArg
            ;;
        --quiet)
            ;;
        --version)
            echo $VERSION
            exit 0
            ;;
        --verbose)
            VERBOSE=1
            ;;
        *)  argc=0
            ;;
        esac
    done

    if [ "$NAME" = "" ] ; then
        NAME="$SOLUTION"
    fi
}


# TODO - cull args not supported or needed
# TODO --sources ""

usage() {
    cat <<!EOF
makeVsSol: usage: makeVsSol [options] projects ....
    Options:
    --help                  Print usage information
    --solution              Solution file name
    --quiet                 Run quietly without tracing actions to stdout
    --version               Print the makeVsSol version
    --verbose               Verbose operation. Traces internal information.

    Environment variables used:
      BLD_TOP               Top of the source tree

    Configuration files used:
        buildConfig.h
!EOF
    exit 255
}


basename() {
    local name="${1##*/}"
    echo "${name%$2}"
}


#
#   Find the top level directory
#
findTop() {
    local top level

    top=$BLD_TOP
    if [ "$top" = "" ] ; then
        top=.
        level=0
        while [ $level -lt 30 ] ; do
            if [ -d $top/build -a -d $top/build/bin -a -f $top/configure ] ; then
                break
            fi
            top=$top/..
            level=$((level + 1))
        done
        top=${top#./}

        if [ $level -ge 30 ] ; then
            echo "Can't find top level directory with build and bin directories" >&2
            exit 255
        fi
    fi
    echo $top
}


output() {
    echo "$*" >>$SOLUTION
}


#
#   Get next command line argument. Uses globals _INDEX, _SWITCH, _ARG.
#
getSwitch()
{
    local i sw arg

    : =${_INDEX:=1}

    _ARG=
    _EQUALS_ARG=
    _SWITCH=

    if [ "${!_INDEX##--}" = "${!_INDEX}" ] ; then
        #
        #   Not a switch
        #
        return
    fi

    #
    #   Extract the value when the format is: --switch=value
    #
    _SWITCH=${!_INDEX%%=*}
    _EQUALS_ARG=${!_INDEX##*=}
    _INDEX=$((_INDEX + 1))
    if [ "$_EQUALS_ARG" != "$_SWITCH" ] ; then
        _ARG="$EQUALS_ARG"
    else
        _EQUALS_ARG=
        _ARG=${!_INDEX}
    fi
}


useArg() {
    _INDEX=$((_INDEX + 1))
}

###############################################################################
outputSolHeader() {
    cat >>${SOLUTION} <<!SOL_HEADER_EOF

Microsoft Visual Studio Solution File, Format Version 11.00
# Visual Studio 2010
!SOL_HEADER_EOF
}


outputSolProjects() {
    local proj base guid xid dguid deps dep
    for proj in $PROJECTS ; do
        if [ ! -f ${proj}.guid ] ; then
            echo "Missing project GUID for $proj"
            continue
        fi
        guid="{"`cat ${proj}.guid`"}"
        xid="{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}"
        base=${proj%.*}
        output 'Project("'${xid}'")' "= \"${base}\", \"${proj}\", \"${guid}\""
        eval deps=\$DEPS_${base//\./_}
        if [ "$deps" != "" ] ; then
            for dep in $deps ; do
                if [ ! -f ${dep}.vcxproj.guid ] ; then
                    echo "Missing project GUID for $dep"
                    continue
                fi
                dguid="{"`cat ${dep}.vcxproj.guid`"}"
                # WARNING: this must be leading tabs or VS ignores it
                cat >>${SOLUTION} <<!SOL_PROJECTS_DEP
	ProjectSection(ProjectDependencies) = postProject
		$dguid = $dguid
	EndProjectSection
!SOL_PROJECTS_DEP
            done
        fi
        output EndProject
    done
        cat >>${SOLUTION} <<!SOL_PROJECTS_EOF
Global
	GlobalSection(SolutionConfigurationPlatforms) = preSolution
		Debug|Win32 = Debug|Win32
		Release|Win32 = Release|Win32
	EndGlobalSection
	GlobalSection(ProjectConfigurationPlatforms) = postSolution
!SOL_PROJECTS_EOF

    for proj in $PROJECTS ; do
        [ ! -f ${proj}.guid ] && continue
        guid="{"`cat ${proj}.guid`"}"
		output "${guid}.Debug|Win32.ActiveCfg = Debug|Win32"
		output "${guid}.Debug|Win32.Build.0 = Debug|Win32"
		output "${guid}.Release|Win32.ActiveCfg = Release|Win32"
		output "${guid}.Release|Win32.Build.0 = Release|Win32"
    done
	output "    EndGlobalSection"
}


outputSolTrailer() {
    cat >>${SOLUTION} <<!SOL_TRAILER_EOF

	GlobalSection(SolutionProperties) = preSolution
		HideSolutionNode = FALSE
	EndGlobalSection
EndGlobal
!SOL_TRAILER_EOF
}

###############################################################################
#
#   Main
#

BLD_TOP=`findTop`

: ${BLD_OUT_DIR:=$BLD_TOP/out}

. `cacheConfig ${BLD_OUT_DIR}/inc/buildConfig.h`
parseArgs "$@"
log "Generate" ${SOLUTION}

argc=$#
shift $((_INDEX - 1))
OS=${BLD_OS}

if [ "$SOLUTION" = "" ] ; then
    echo "makeVsSol: must specify a solution name with --solution"
    exit 2
fi
for proj in $* ; do
    PROJECTS="$PROJECTS ${proj%.vcxproj}.vcxproj"
done

rm -f ${SOLUTION}
outputSolHeader
outputSolProjects
outputSolTrailer
unix2dos -D $SOLUTION 2>/dev/null
exit 0

