#
#	make.WIN -- Makefile settings for Windows
#
#   Copyright (c) All Rights Reserved. See copyright notice at the bottom of the file.
#
#	This file expects that the per-directory Makefiles will have included their .makedep 
#	files which will in-turn include buildConfig.h and this file.
#
################################################################################

SHELL				:= /bin/bash

_IFLAGS             =
_CFLAGS             =
_DFLAGS             =
_ESFLAGS            =
_LDFLAGS            =
_LDPATH             =
_LIBS               =

ifeq ($(BLD_TYPE),DEBUG)
	_ESFLAGS	    += --debug --optimize 9
else
	_ESFLAGS	    += --optimize 9
endif

_DFLAGS  			+= -D_REENTRANT -D_MT
ifeq ($(BUILDING_NATIVE),1)
_DFLAGS  			+= -DBUILDING_NATIVE=1
endif
_IFLAGS			    += -I$(BLD_INC_DIR)

_CFLAGS             += -nologo -GR-
ifeq ($(BLD_TYPE),DEBUG)
    _CFLAGS	        += -W3 -Zi -Od
    _CFLAGS 	    += -MDd
    _LDFLAGS		+= -debug
else
    _CFLAGS         += -O2
    _CFLAGS		    += -MD
endif

_LDFLAGS		    += -nodefaultlib -incremental:no -nologo
ifeq ($(BLD_CPU),x86_64)
    _LDFLAGS		+= -machine:x64
else
    _LDFLAGS		+= -machine:x86
endif
_LDPATH			    = $(BLD_LIB_DIR)

_LIBS          	    += ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib

ifeq ($(BLD_DEBUG),1)
    # Not using msvcrtd.lib. If you do, you must ensure all packages/extensions use it as well
    _LIBS           += msvcrt.lib
else
    _LIBS           += msvcrt.lib
endif

CLEANIT		        += *.a *.tmp *.bak *.out *.obj *.map *.res *.sym *.lst *.mdp *.pbi *.pbo *.pbt *.pdb *.pch \
					   *.plg *.exp *.ilk *.idb *.o *.class *.manifest *.dll *.lib 

.PRECIOUS: 	$(_LIBS)

#
#	These exports defined in this file are used by the bld program
#
export 	_LDPATH _CFLAGS _DFLAGS _IFLAGS _LDFLAGS _LIBS BLD_TOP

#
#	Transitition rules
#
.SUFFIXES: .cpp .rc .res .lib .a .cs .java


#
#	Build rule for C source
#
$(BLD_OBJ_DIR)/%${BLD_OBJ}: %.c
	@if [ "$(PRE)" = 1 ] ; then \
        $(call log) "[Preprocess]" "cl -E $< >$*.pre" ; \
		"$(BLD_CC)" -E $($(*)_DLFAGS) $(MAKE_DFLAGS) $(_DFLAGS) $(BLD_DFLAGS) $($(*)_CFLAGS) $(MAKE_CFLAGS) $(_CFLAGS) $(BLD_CFLAGS) $($(*)_IFLAGS) $(MAKE_IFLAGS) $(BLD_IFLAGS) $(_IFLAGS) $< > `basename $@ | sed 's/$(BLD_OBJ)$$/.pre/'` ; \
    fi
	@if [ "$(TRACE)" = 1 ] ; then echo "$(BLD_CC)" -c $($(*)_DLFAGS) $(MAKE_DFLAGS) $(_DFLAGS) $(BLD_DFLAGS) $($(*)_CFLAGS) $(MAKE_CFLAGS) $(_CFLAGS) $(BLD_CFLAGS) $($(*)_IFLAGS) $(MAKE_IFLAGS) $(BLD_IFLAGS) $(_IFLAGS) $< -Fo$@ -Fd$(BLD_OBJ_DIR)/ ; \
	else d=$(DIR)/$< ; d=$${d#./} ; $(call log) "[Compile]" $$d ; fi
	@"$(BLD_CC)" -c $($(*)_DLFAGS) $(MAKE_DFLAGS) $(_DFLAGS) $(BLD_DFLAGS) $($(*)_CFLAGS) $(MAKE_CFLAGS) $(_CFLAGS) $(BLD_CFLAGS) $($(*)_IFLAGS) $(MAKE_IFLAGS) $(BLD_IFLAGS) $(_IFLAGS) $< -Fo$@ -Fd$(BLD_OBJ_DIR)/ 2>&1 >.$$$$.cltmp ; \
	status=$$? ; \
	if [ $$status -ne 0 -o "$(TRACE)" = "1" ] ; then cat .$$$$.cltmp >&2; rm -f .$$$$.cltmp ; \
    else cat .$$$$.cltmp | grep warning >&2; fi ; rm -f .$$$$.cltmp ; \
	if [ $$status -ne 0 ] ; then exit 255; else true ; fi

#
#	Build rule for C++ source
#
$(BLD_OBJ_DIR)/%${BLD_OBJ}: %.cpp
	@if [ "$(PRE)" = 1 ] ; then \
        $(call log) "[Preprocess]" "cl -E $< >$*.pre" ; \
		"$(BLD_CC)" -E $($(*)_DLFAGS) $(MAKE_DFLAGS) $(_DFLAGS) $(BLD_DFLAGS) $($(*)_CFLAGS) $(MAKE_CFLAGS) $(_CFLAGS) $(BLD_CFLAGS) $($(*)_IFLAGS) $(MAKE_IFLAGS) $(BLD_IFLAGS) $(_IFLAGS) $< > `basename $@ | sed 's/$(BLD_OBJ)$$/.pre/'` ; \
    fi
	@if [ "$(TRACE)" = 1 ] ; then echo "$(BLD_CXX)" -c $($(*)_DLFAGS) $(MAKE_DFLAGS) $(_DFLAGS) $(BLD_DFLAGS) $($(*)_CFLAGS) $(MAKE_CFLAGS) $(_CFLAGS) $(BLD_CFLAGS) $($(*)_IFLAGS) $(MAKE_IFLAGS) $(BLD_IFLAGS) $(_IFLAGS) $< -Fo$@
	else d=$(DIR)/$< ; d=$${d#./} ; $(call log) "[Compile]" $$d ; fi
	@"$(BLD_CXX)" -c $($(*)_DLFAGS) $(MAKE_DFLAGS) $(_DFLAGS) $(BLD_DFLAGS) $($(*)_CFLAGS) $(MAKE_CFLAGS) $(_CFLAGS) $(BLD_CFLAGS) $($(*)_IFLAGS) $(MAKE_IFLAGS) $(BLD_IFLAGS) $(_IFLAGS) $< -Fo$@


#
#	Build rule for C# source
#
# $(BLD_OBJ_DIR)/%${BLD_LIB}: %.cs
# 	"$(BLD_CSC)" /nologo /target:library /out:$@ $< 


#
#	Build rules for java source
#
${BLD_OBJ_DIR}/classes/${SRC_PATH}/%${BLD_CLASS}: ${BLD_OBJ_DIR}/src/${SRC_PATH}/%.java
	"$(BLD_JAVAC)" $(JAVA_TARGET) $(JAVA_VERSION) -d $(BLD_OBJ_DIR)/classes $(JDEBUG) $(JFLAGS) $<

$(BLD_OBJ_DIR)/src/$(SRC_PATH)/%.java: %.java
	@echo
	pp -j $(_JDEFINES) $(JDEFINES) -o $(BLD_OBJ_DIR)/src/$(SRC_PATH)/$< $< 

%.lib:
	@true

%.dll:
	@true

################################################################################
#
#	Copyright (c) Embedthis Software LLC, 2003-2011. All Rights Reserved.
#	The latest version of this code is available at http://www.embedthis.com
#
#	This software is open source; you can redistribute it and/or modify it 
#	under the terms of the GNU General Public License as published by the 
#	Free Software Foundation; either version 2 of the License, or (at your 
#	option) any later version.
#
#	This program is distributed WITHOUT ANY WARRANTY; without even the 
#	implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
#	See the GNU General Public License for more details at:
#	http://www.embedthis.com/downloads/gplLicense.html
#	
#	This General Public License does NOT permit incorporating this software 
#	into proprietary programs. If you are unable to comply with the GPL, a 
#	commercial license for this software and support services are available
#	from Embedthis Software at http://www.embedthis.com
#
