#
#   ejscript - Ejscript language
#
defineComponent() {
    local deps libs optional path libdir builtin imports incdir iflags present SHOBJ type n allinone search

    path="${1}"
    eval SHOBJ=\$BLD_${kind}_SHOBJ
    builtin=`[ "$path" = "" -a -f src/ejs.h ] && echo --builtin`
    eval sqlite=\$CFG_${kind}_SQLITE

    #
    #   Download flat distribution if requested. Currently just for build-farm use.
    #
    if [ "${path/http:}" != "${path}" ] ; then
        echo -n "Downloading $path ... "
        # http http://farm.embedthis.com/software/ejs-2.0.0-B0-flat.tgz >src/deps/ejs.tgz
        curl -s -f $path >src/deps/ejs.tgz
        if [ $? != 0 ] ; then
            warnComponent ejscript "Can't download Ejscript from $path"
            return
        fi
        mkdir -p src/deps/ejs 
        tar -C src/deps/ejs --strip-components 2 -zxf src/deps/ejs.tgz
        rm src/deps/ejs.tgz
        builtin="--builtin"
    fi

    optional="ssl"
    deps="mpr http"
    libs="ejs pcre"
    withlibs="pcre"
    allinone=0
    allinone=

    if [ "$builtin" != "" -a -f src/deps/ejs/ejsLib.c ] ; then
        optional="$optional sqlite3"
        sqlite=1
        allinone=1
        BLD_FEATURE_EJSCRIPT_ALL_IN_ONE=1
    fi
    if [ "$sqlite" = 1 ] ; then
        withlibs="sqlite3"
        libs="$libs sqlite3"
    fi

    if [ "$builtin" = "" ] ; then
        #
        #   Building with an external ejscript source tree
        #
        search="$path/out/lib:$path/out/bin:$path/out/inc:$path"
        libdir=`probe --name libejs --dir --search "$search" "libejs"`
        if [ "$libdir" = "" -a "$path" != "." ] ; then
            warnComponent ejscript "Can't locate libejs"
            return
        fi
        for lib in `echo $libdir/libejs* $libdir/libmpr* $libdir/libhttp* $libdir/libpcre* $libdir/ejs*${SHOBJ} \
                $libdir/libsqlite3*` ; do
            if [ ! -f "$lib" ] ; then
                warnComponent ejscript "Ejscript is not correctly built. Missing $lib"
                return
            fi
            libraries="$lib $libraries"
        done
        if [ "$allinone" = 1 -a "$sqlite" = 1 ] ; then
            libraries="$libraries `echo $libdir/libsqlite3*`"
        fi
        ejsbin=`probe --exe --name ejs --search "$search" ejs`

        if [ "$libdir" != "" ] ; then
            imports="$libraries"
            modules=`echo $libdir/*.mod`
            imports="$imports $modules"
            #
            #   Import manager, http and makerom as they come from the MPR and Http libraries which Ejscript supplies.
            #
            manager=`probe --exe --name manager --search "$search" manager`
            if [ "$manager" != "" ] ; then
                imports="$imports $manager"
            fi
            http=`probe --exe --name http --search "$search" http`
            if [ "$http" != "" ] ; then
                imports="$imports $http"
            fi
            makerom=`probe --exe --name makerom --search "$search" makerom`
            if [ "$makerom" != "" ] ; then
                imports="$imports $makerom"
            fi
            for n in MPR HTTP PCRE ; do
                eval CFG_${kind}_${n}_IMPORTS=
                eval CFG_${kind}_${n}_BUILTIN=
            done
        else
            #
            #   Could not find (optional) ejscript component. Mark as not present.
            #
            optional= libs= withlibs= deps= present="--present 0"
        fi
    else
        ejsbin=`canonPath ${BLD_OUT_DIR}/bin/ejs`
        search="src:src/deps/ejs"
    fi
    incdir=`probe --name ejs.h --dir --search "$search" "ejs.h" `
    if [ "$incdir" != "" ] ; then
        headers="`echo $incdir/ejs*.h`"
        imports="$imports $headers"
        if [ "$builtin" = "" ] ; then
            headers="`echo $incdir/http.h $incdir/mpr*.h $incdir/pcre.h`"
            imports="$imports $headers"
        fi
    fi
    configureComponent --libs "$libs" --iflags "$iflags" --libpaths "$libdir" --withlibs "$withlibs" \
        $builtin $present --dependencies "$deps" --optional-dependencies "$optional" --imports "$imports" \
        --path "$ejslib" ejscript
}
